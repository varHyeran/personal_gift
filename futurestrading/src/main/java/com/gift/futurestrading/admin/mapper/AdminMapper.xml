<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gift.futurestrading.admin.mapper.AdminMapper">
	<!-- 수익관리 -->
		<select id="selectChart" parameterType="map" resultType="String">
	    	
	    </select>
	<!-- 관리자 비밀번호 확인 -->
		<select id="selectAdminPassword" parameterType="map" resultType="String">
	        SELECT
	        	admin_id_pk
	        FROM admin WHERE admin_id_pk = #{adminId} AND admin_password = PASSWORD(#{adminPassword})
	    </select>
	<!-- 관리자삭제 -->
		<delete id="deleteAdmin">
			DELETE FROM admin WHERE admin_id_pk = #{adminId} AND #{adminId} != 'topAdmin'
		</delete>
	<!-- 최고관리자 비밀번호 확인 -->
		<select id="selectTopAdminPassword" parameterType="String" resultType="String">
	        SELECT
	        	admin_id_pk
	        FROM admin WHERE admin_password = PASSWORD(#{topAdminPassword}) AND admin_id_pk = 'topAdmin'
	    </select>
	<!-- 관리자수정 -->
	    <update id="updateAdmin" parameterType="com.gift.futurestrading.admin.vo.AdminVo">
			UPDATE admin 
			SET admin_password = IF(#{adminPassword} != "", PASSWORD(#{adminPassword}), admin_password),
				admin_name = IF(#{adminPassword} != "", #{adminName}, #{adminName}) 
			WHERE admin_id_pk = #{adminId}
	    </update>	
	<!-- 관리자수정화면 -->
		<select id="selectAdminOne" resultType="com.gift.futurestrading.admin.vo.AdminVo">
	        SELECT
	        	admin_id_pk as adminId, 
	        	admin_password as adminPassword,
	        	admin_name as adminName,
	        	admin_right as adminRight,
	        	admin_register_date as adminRegisterDate
	        FROM admin WHERE admin_id_pk = #{adminId}
	    </select>
	<!-- 관리자등록 -->
		<insert id="insertAdmin" parameterType="com.gift.futurestrading.admin.vo.AdminVo">
		    INSERT INTO admin(admin_id_pk, admin_password, admin_name, admin_right, admin_register_date) 
		    	VALUES(#{adminId}, PASSWORD(#{adminPassword}), #{adminName}, '관리자', now())
		</insert>
	<!-- 관리자 아이디 중복체크 -->	
		<select id="selectInputAdminId" resultType="int">
			Select Count(*) From view_total_id WHERE total_id = #{inputAdminId}
		</select>
	<!-- 관리자조회 -->
	    <select id="selectAdmin" resultType="com.gift.futurestrading.admin.vo.AdminVo">
	        SELECT 
	        	admin_id_pk as adminId, 
	        	admin_name as adminName,
	        	admin_right as adminRight,
	        	admin_register_date as adminRegisterDate
	        FROM admin
	    </select>
	<!-- 구매자리스트(페이징포함)를 조회하기 위한 select -->
	<select id="selectConsumerAll" resultType="com.gift.futurestrading.member.vo.ConsumerVo" parameterType="com.gift.futurestrading.page.vo.Criteria">
		SELECT 
			consumer_id_pk as consumerIdPk,
			consumer_password as consumerPassword,
			consumer_name as consumerName,
			consumer_email as consumerEmail,
			consumer_jumin_no as consumerJuminNo,
			consumer_address_post_code as consumerAddressPostCode,
			consumer_address_road as consumerAddressRoad,
			consumer_address_road as consumerAddressDetail,
			consumer_phone as consumerPhone,
			consumer_sign_up_date as consumerSignUpDate,
			consumer_status as consumerStatus,
			consumer_admit_check_flag as consumerAdmitCheckFlag
		FROM consumer
		LIMIT #{pageStart}, #{perPageNum}
	</select>
	<!-- 구매자의 전체 행 구하기위한 select -->
	<select id="selectConsumerAllCount" resultType="int">
		SELECT COUNT(*) FROM consumer
	</select>
	<!-- 판매자리스트(페이징포함)를 조회하기 위한 select -->
	<select id="selectSellerAll" resultType="com.gift.futurestrading.member.vo.SellerVo" parameterType="com.gift.futurestrading.page.vo.Criteria">
		SELECT
			seller_id_pk as sellerIdPk,
			seller_password as sellerPassword,
			seller_name as sellerName,
			seller_email as sellerEmail,
			seller_jumin_no as sellerJuminNo,
			seller_sign_up_date as sellerSignUpDate,
			seller_address_post_code as sellerAddressPostCode,
			seller_address_road as sellerAddressRoad,
			seller_address_detail as sellerAddressDetail,
			seller_corporate_name as sellerCorporateName,
			seller_phone as sellerPhone,
			seller_right as sellerRight,
			seller_admit_admin as sellerAdmitAdmin,
			seller_admit_date as sellerAdmitDate
		FROM seller
		LIMIT #{pageStart}, #{perPageNum}
	</select>
	<!-- 판매자의 전체 행 구하기위한 select -->
	<select id="selectSellerAllCount" resultType="int">
		SELECT COUNT(*) FROM seller
	</select>
	<!-- 구매자 계좌조회(한명)하기위한 select -->
	<select id="selectConsumerAccountOne" resultType="com.gift.futurestrading.member.vo.AccountConsumerVo" parameterType="com.gift.futurestrading.member.vo.ConsumerVo">
		SELECT 
			ac.fk_consumer__account_consumer as fkConsumerAccountConsumer,
			ac.account_consumer_name as accountConsumerName,
			ac.account_consumer_account_no as accountConsumerAccountNo, 
			ac.account_consumer_bank_name as accountConsumerBankName,
			ac.account_consumer_sign_up_date as accountConsumerSignUpDate 
		FROM account_consumer ac 
		INNER JOIN consumer c ON c.consumer_id_pk=ac.fk_consumer__account_consumer 
		WHERE c.consumer_id_pk=#{consumerIdPk} 
	</select>
	<!-- 판매자 서류업로드조회(한명)하기위한 select -->
	<select id="selectSellerDocumentOne" resultType="com.gift.futurestrading.member.vo.SellerFileVo" parameterType="com.gift.futurestrading.member.vo.SellerVo">
		SELECT 
			ds.fk_seller__document_seller as sellerId,
			ds.document_seller_name as sellerName,
			ds.document_seller_path as sellerPath,
			ds.document_seller_path_folder as sellerPathFolder,
			ds.document_seller_license as sellerLicence,
			ds.document_seller_bank_copy as sellerBankCopy,
			ds.document_seller_certificate as sellerCertification,
			ds.document_seller_communication_sales as sellerCommunicationSales,
			ds.document_seller_product_grade as sellerProductGrade
		FROM document_seller ds INNER JOIN seller s 
		ON s.seller_id_pk=ds.fk_seller__document_seller 
		WHERE s.seller_id_pk=#{sellerIdPk}
	</select>
	<!-- 판매자 서류업로드조회 후 승인하기위한 update -->
	<update id="updateSellerRightCheck" parameterType="map">
		UPDATE 
			seller 
		SET 
			seller_right = '판매자_승인',
			seller_admit_date = now(),
			seller_admit_admin = #{adminIdPk}
		WHERE seller_id_pk=#{sellerIdPk};
	</update>
</mapper>